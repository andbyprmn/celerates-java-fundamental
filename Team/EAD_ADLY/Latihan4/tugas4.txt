Tugas ke- 4


1. Faktorial 

Looping atau perulangan di dalam suatau pemrograman dapat didefinisikan sebagai perintah yang digunakan untuk mengeksekusi statement berulang kali hingga kondisi yang telah ditentukan.Untuk membuat perulangan pada Java 
dapat menggunakan istilah for, while, do while dan for each, dapat juga dilakukan perulangan dalam perulangan yang dikenal sebagai Nested loop (perulangan bersarang). Pada prinsipnya penggunaan perulangan bersarang akan mengeksekusi pertama kali perulangan pada bagian dalam, setelah itu perulangan pada bagian luar akan dieksekusi. Untuk lebih jelas 
diambil program untuk menghasilkan perhitungan dari operasi faktorial  berikut:
        
        	//Outer---> 	for (int i = 0; i < batas; i++) {
            		                    faktorial = 1;

           	//Inner--->            for (int faktor = 2; faktor < i; faktor++)
                                                 faktorial=faktorial*faktor;
                                           
                                          System.out.println(i+"!"+" adalah = "+faktorial);

Pada saat menggunakan perulangan bersarang (for) nilai pada bagian luar akan berubah ketika bagian dalam (for) selesai dieksekusi 
         
             Dalam Memori 				 Keluarannya 
         int i                int faktor 
          0               tidak terpenuhi karena (faktor < 0)	    0! = 	1
          1               tidak terpenuhi                                         1!  =  	1
          2 	             tidak terpenuhi                                         2!  = 	1
          3	             terpenuhi (2 < 3)                                     3!  =   2
          :
       akhir perulangan (batas = 4)

Jika kita bandingkan dengan hasil perhitungan manual operasi faktorial, nilai di atas tentunya memiliki kesalahan, dengan sedikit memodifikasi batas perulangan 
(for) kedua menjadi "faktor <= i" atau jika kita menuliskan kembali ke dalam program menjadi

 	Solusi----->	for (int faktor = 2; faktor <=i; faktor++)
                                                 faktorial=faktorial*faktor;
         
akibat dari notasi lebih besar dari sama dengan "<=" pada perulangan kedua 
akan membaca kondisi (2 <= 2) dan menghasilkan nilai 2! = 2, keluaran
seluruhnya menjadi: 

		Keluarannya: 
                             0!    = 1
                             1!    = 1     
                             2!    = 2 * 1 = 2 
                             3!    = 3 * 2  * 1 = 6



2.  Perulangan Do-while 

Perulangan do while mempunyai fungsi yang sama dengan while, tetapi
pada perulangan do while pengecakan kondisinya dilakukan diakhir.	Class PerulanganDoWhile menampilkan pecahan desimal secara acak 
. Jika nilai r di deklarasi dengan r = 1, akan terus melakukan 
pencetakan nilai acak hingga memenuhi kondisi di while (r < 0.99) dan 
berhenti pada saat kondisi tersebut bernilai salah. 


3.  Perulangan For2 

Pada program perulangan di class PerulanganFor2 dimana nilai dari radius di set dari 1.0 sampai 2.0 dengan kenaikan radius 0.2. type data 
dari radius sendiri merupakan type data double yang digunakan untuk 
menyimpan nilai decimal. perintah selanjutnya adalah mencetak luas
dari lingkaran yang menghasilkan nilai decimal


4.  Perulangan while 

perulangan dengan menggunakan while digunakan jika proses saat kondisi terpenuhi. While akan mengecek kesesuain dengan kondisi 
pra perintah, dalam hal ini (r<0.99d), dengan mendeklarasikan 
variabel r dengan nilai 0, maka program akan memerintahkan dengan 
mencetak nilai acak dan menyimpannya ke variabel r serta berhenti 
pada kondisi r < 0.99d bernilai salah "false"
